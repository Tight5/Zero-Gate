File 20: Header Layout Component (src/components/layout/Header.jsx)
jsx
import React, { useState } from 'react';
import { 
  Heading, 
  Button, 
  Dropdown, 
  DropdownItem,
  Avatar,
  IconButton 
} from '@replit/ui';
import { 
  Menu as MenuIcon,
  Settings as SettingsIcon,
  LogOut as LogoutIcon,
  Moon as MoonIcon,
  Sun as SunIcon,
  Bell as BellIcon
} from 'lucide-react';
import { useAuth } from '../../contexts/AuthContext';
import { useTheme } from '../../contexts/ThemeContext';
import { useTenant } from '../../contexts/TenantContext';
import TenantSelector from '../common/TenantSelector';
import NotificationCenter from '../common/NotificationCenter';
import './Header.css';

const Header = ({ onMenuToggle }) => {
  const { user, logout } = useAuth();
  const { theme, toggleTheme } = useTheme();
  const { currentTenant } = useTenant();
  const [userMenuOpen, setUserMenuOpen] = useState(false);
  const [notificationsOpen, setNotificationsOpen] = useState(false);

  return (
    <header className="app-header">
      <div className="header-left">
        <IconButton
          icon={MenuIcon}
          onClick={onMenuToggle}
          className="menu-toggle"
          aria-label="Toggle sidebar"
        />
        <div className="logo-section">
          <Heading size="large" className="app-title">
            Zero Gate
          </Heading>
          {currentTenant && (
            <span className="tenant-indicator">
              {currentTenant.name}
            </span>
          )}
        </div>
      </div>

      <div className="header-center">
        <TenantSelector />
      </div>

      <div className="header-right">
        <IconButton
          icon={BellIcon}
          onClick={() => setNotificationsOpen(true)}
          aria-label="Notifications"
          className="notification-button"
        />
        
        <IconButton
          icon={theme === 'dark' ? SunIcon : MoonIcon}
          onClick={toggleTheme}
          aria-label="Toggle theme"
        />

        <Dropdown
          open={userMenuOpen}
          onOpenChange={setUserMenuOpen}
          trigger={
            <Button variant="ghost" className="user-menu-trigger">
              <Avatar
                src={user?.avatar}
                alt={user?.name || 'User'}
                size="small"
              />
              <span className="user-name">{user?.name}</span>
            </Button>
          }
        >
          <DropdownItem
            icon={SettingsIcon}
            onClick={() => {/* Navigate to settings */}}
          >
            Settings
          </DropdownItem>
          <DropdownItem
            icon={LogoutIcon}
            onClick={logout}
            className="logout-item"
          >
            Logout
          </DropdownItem>
        </Dropdown>
      </div>

      <NotificationCenter
        open={notificationsOpen}
        onClose={() => setNotificationsOpen(false)}
      />
    </header>
  );
};

export default Header;